{"version":3,"sources":["helpers/sizes.js","styles/AppStyles.js","reducers/todos.reducer.js","constants/actions.js","hooks/useLocalStorageReducer.js","contexts/todos.context.js","hooks/useInputState.js","styles/TodoFormStyles.js","components/TodoForm.js","styles/TodoStyles.js","styles/EditTodoFormStyles.js","components/EditTodoForm.js","components/Todo.js","hooks/useToggleState.js","components/TodoList.js","components/TodoApp.js","components/App.js","serviceWorker.js","index.js"],"names":["size","xs","md","makeStyles","App","width","margin","sizes","header","textAlign","color","fontSize","fontWeight","link","display","justifyContent","backfaceVisibility","position","textDecoration","transition","reducer","state","action","type","id","uuid","task","completed","filter","todo","map","useLocalStorageReducer","key","defaultValue","useReducer","value","JSON","parse","window","localStorage","getItem","String","e","dispatch","useEffect","setItem","stringify","defaultTodos","TodosContext","createContext","DispatchContext","TodosProvider","props","todosReducer","todos","Provider","children","initialValue","useState","setValue","target","TodoForm","marginBottom","input","height","background","border","borderBottom","outline","classes","useStyles","useContext","useInputState","handleChange","clearValue","onSubmit","preventDefault","className","placeholder","onChange","Todo","alignItems","paddingLeft","lineHeight","overflowX","cursor","opacity","icons","marginRight","float","EditTodoForm","transform","toggleEditForm","autoFocus","onClick","stopPropagation","memo","setState","toggle","useToggleState","isEditing","style","overflowY","TodoList","TodoApp","href","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.466cebd3.chunk.js","sourcesContent":["export default {\r\n  down(size) {\r\n    const sizes = {\r\n      xs: \"575.98px\",\r\n      md: \"991.98px\",\r\n    };\r\n\r\n    return `@media (max-width: ${sizes[size]})`;\r\n  },\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport sizes from \"../helpers/sizes\";\r\n\r\nexport default makeStyles({\r\n  App: {\r\n    width: \"50%\",\r\n    margin: \"0 auto\",\r\n    [sizes.down(\"md\")]: {\r\n      width: \"70%\",\r\n    },\r\n    [sizes.down(\"xs\")]: {\r\n      width: \"90%\",\r\n    },\r\n  },\r\n  header: {\r\n    textAlign: \"center\",\r\n    \"& h1\": {\r\n      color: \"#2c3e50\",\r\n      margin: \"5vh 0 0 0\",\r\n      fontSize: \"5rem\",\r\n      fontWeight: \"300\",\r\n      \"& span\": {\r\n        fontWeight: \"700\",\r\n      },\r\n      [sizes.down(\"xs\")]: {\r\n        fontSize: \"4.5rem\",\r\n      },\r\n    },\r\n    \"& h2\": {\r\n      color: \"#9aa1a5\",\r\n      fontSize: \"1rem\",\r\n      fontWeight: \"300\",\r\n      [sizes.down(\"xs\")]: {\r\n        fontSize: \"0.6rem\",\r\n      },\r\n    },\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backfaceVisibility: \"hidden\",\r\n    color: \"#81b3d2\",\r\n    fontSize: \"0.7rem\",\r\n    position: \"relative\",\r\n    textDecoration: \"none\",\r\n    transition: \"0.5s color ease\",\r\n  },\r\n});\r\n","import uuid from \"uuid/v4\";\r\nimport {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  TOGGLE_TODO,\r\n  EDIT_TODO,\r\n} from \"../constants/actions\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, { id: uuid(), task: action.task, completed: false }];\r\n    case REMOVE_TODO:\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case TOGGLE_TODO:\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case EDIT_TODO:\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, task: action.task } : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\n","import { useReducer, useEffect } from \"react\";\r\n\r\nfunction useLocalStorageReducer(key, reducer, defaultValue) {\r\n  const [state, dispatch] = useReducer(reducer, defaultValue, () => {\r\n    let value;\r\n    try {\r\n      value = JSON.parse(\r\n        window.localStorage.getItem(key) || String(defaultValue)\r\n      );\r\n    } catch (e) {\r\n      value = defaultValue;\r\n    }\r\n    return value;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, dispatch];\r\n}\r\n\r\nexport default useLocalStorageReducer;\r\n","import React, { createContext } from \"react\";\r\nimport todosReducer from \"../reducers/todos.reducer\";\r\nimport useLocalStorageReducer from \"../hooks/useLocalStorageReducer\";\r\n\r\nconst defaultTodos = [\r\n  { id: \"0\", task: \"Read a book\", completed: false },\r\n  { id: \"1\", task: \"Jog in a playground\", completed: true },\r\n  { id: \"2\", task: \"Write articles\", completed: false },\r\n];\r\n\r\nexport const TodosContext = createContext();\r\nexport const DispatchContext = createContext();\r\n\r\nexport function TodosProvider(props) {\r\n  const [todos, dispatch] = useLocalStorageReducer(\r\n    \"todos\",\r\n    todosReducer,\r\n    defaultTodos\r\n  );\r\n  return (\r\n    <TodosContext.Provider value={todos}>\r\n      <DispatchContext.Provider value={dispatch}>\r\n        {props.children}\r\n      </DispatchContext.Provider>\r\n    </TodosContext.Provider>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handleChange = (e) => setValue(e.target.value);\r\n  const reset = () => setValue(\"\");\r\n\r\n  return [value, handleChange, reset];\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  TodoForm: {\r\n    width: \"100%\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    height: \"2rem\",\r\n    background: \"none\",\r\n    border: \"none\",\r\n    borderBottom: \"1px solid #34495e\",\r\n    color: \"#34495e\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"300\",\r\n    outline: \"none\",\r\n  },\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { DispatchContext } from \"../contexts/todos.context\";\r\nimport useInputState from \"../hooks/useInputState\";\r\nimport useStyles from \"../styles/TodoFormStyles.js\";\r\nimport { ADD_TODO } from \"../constants/actions.js\";\r\n\r\nfunction TodoForm() {\r\n  const classes = useStyles();\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, clearValue] = useInputState(\"\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: ADD_TODO, task: value });\r\n        clearValue();\r\n      }}\r\n      className={classes.TodoForm}\r\n    >\r\n      <input\r\n        placeholder=\"Add your task here...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.input}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  Todo: {\r\n    width: \"100%\",\r\n    height: \"2.5rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: \"0.5rem\",\r\n    color: \"#34495e\",\r\n    fontSize: \"1rem\",\r\n    lineHeight: \"2.5rem\",\r\n    overflowX: \"hidden\",\r\n    transition: \"all 0.3s ease\",\r\n    \"&:hover\": {\r\n      background: \"rgba(0, 0, 0, 0.03)\",\r\n      cursor: \"pointer\",\r\n    },\r\n    \"&:hover div\": {\r\n      opacity: \"1\",\r\n    },\r\n  },\r\n  icons: {\r\n    width: \"40px\",\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginRight: \"1rem\",\r\n    float: \"right\",\r\n    transition: \"all 0.3s\",\r\n    opacity: \"0\",\r\n  },\r\n});\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  EditTodoForm: {\r\n    width: \"100%\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n  input: {\r\n    width: \"85%\",\r\n    background: \"transparent\",\r\n    border: \"none\",\r\n    borderBottom: \"1px solid #ccc\",\r\n    fontSize: \"1rem\",\r\n    transition: \"0.6s\",\r\n    transform: \"translateY(8px)\",\r\n    \"&:focus\": {\r\n      borderBottom: \"1px solid #58b2dc\",\r\n      outline: \"none\",\r\n    },\r\n  },\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { DispatchContext } from \"../contexts/todos.context\";\r\nimport useInputState from \"../hooks/useInputState\";\r\nimport useStyles from \"../styles/EditTodoFormStyles.js\";\r\nimport { EDIT_TODO } from \"../constants/actions\";\r\n\r\nfunction EditTodoForm({ id, task, toggleEditForm }) {\r\n  const classes = useStyles();\r\n  const dispatch = useContext(DispatchContext);\r\n  const [value, handleChange, clearValue] = useInputState(task);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: EDIT_TODO, id, task: value });\r\n        toggleEditForm();\r\n        clearValue();\r\n      }}\r\n      className={classes.EditTodoForm}\r\n    >\r\n      <input\r\n        autoFocus\r\n        value={value}\r\n        onChange={handleChange}\r\n        onClick={(e) => e.stopPropagation()}\r\n        className={classes.input}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditTodoForm;\r\n","import React, { useContext, memo } from \"react\";\r\nimport { DispatchContext } from \"../contexts/todos.context\";\r\nimport useStyles from \"../styles/TodoStyles.js\";\r\nimport { REMOVE_TODO, TOGGLE_TODO } from \"../constants/actions\";\r\nimport EditTodoForm from \"./EditTodoForm\";\r\nimport useToggleState from \"../hooks/useToggleState\";\r\n\r\nfunction Todo({ id, task, completed }) {\r\n  const classes = useStyles();\r\n  const dispatch = useContext(DispatchContext);\r\n  const [isEditing, toggle] = useToggleState(false);\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <li\r\n        className={classes.Todo}\r\n        style={{ overflowY: \"hidden\" }}\r\n        onClick={() => toggle()}\r\n      >\r\n        <EditTodoForm id={id} task={task} toggleEditForm={toggle} />\r\n      </li>\r\n    );\r\n  }\r\n  return (\r\n    <li\r\n      className={classes.Todo}\r\n      onClick={() => dispatch({ type: TOGGLE_TODO, id })}\r\n    >\r\n      <span\r\n        style={{\r\n          textDecoration: completed ? \"line-through\" : \"\",\r\n          color: completed ? \"#bdc3c7\" : \"#34495e\",\r\n        }}\r\n      >\r\n        {task}\r\n      </span>\r\n      <div className={classes.icons}>\r\n        <i\r\n          style={{ color: \"#c0392b\" }}\r\n          className=\"fas fa-trash\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            dispatch({ type: REMOVE_TODO, id });\r\n          }}\r\n        />\r\n        <i\r\n          style={{ color: \"#2f5fff\" }}\r\n          className=\"fas fa-edit\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            toggle();\r\n          }}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default memo(Todo);\r\n","import { useState } from \"react\";\r\n\r\nexport default (initialValue = false) => {\r\n  const [state, setState] = useState(initialValue);\r\n  const toggle = () => setState(!state);\r\n\r\n  return [state, toggle];\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { TodosContext } from \"../contexts/todos.context\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n  const todos = useContext(TodosContext);\r\n\r\n  return (\r\n    <ul style={{ paddingLeft: 10, width: \"95%\" }}>\r\n      {todos.map((todo) => (\r\n        <Todo key={todo.id} {...todo} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { TodosProvider } from \"../contexts/todos.context\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction TodoApp() {\r\n  return (\r\n    <TodosProvider>\r\n      <TodoForm />\r\n      <TodoList />\r\n    </TodosProvider>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n","import React from \"react\";\r\nimport useStyles from \"../styles/AppStyles\";\r\nimport TodoApp from \"./TodoApp\";\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.App}>\r\n      <header className={classes.header}>\r\n        <h1>\r\n          todo<span>list</span>\r\n        </h1>\r\n        <h2>A simple todolist app built with React Hooks & Context</h2>\r\n      </header>\r\n      <TodoApp />\r\n      <a href=\"https://github.com/MiKoKappa\" className={classes.link}>\r\n        <strong>Built by Mikołaj Tkaczyk</strong>\r\n      </a>\r\n      <a\r\n        href=\"https://medium.com/@walkccc/build-a-todo-list-app-with-react-hooks-and-context-a7f8e9f158af\"\r\n        className={classes.link}\r\n      >\r\n        <strong>based on tutorial by &copy; Jay Chen</strong>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}